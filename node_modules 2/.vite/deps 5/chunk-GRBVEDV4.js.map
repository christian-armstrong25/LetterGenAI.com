{
  "version": 3,
  "sources": ["../../langchain/dist/schema/index.js"],
  "sourcesContent": ["export const RUN_KEY = \"__run\";\nexport class BaseChatMessage {\n    constructor(text) {\n        /** The text of the message. */\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = text;\n    }\n    toJSON() {\n        return {\n            type: this._getType(),\n            data: {\n                content: this.text,\n                role: \"role\" in this ? this.role : undefined,\n            },\n        };\n    }\n}\nexport class HumanChatMessage extends BaseChatMessage {\n    _getType() {\n        return \"human\";\n    }\n}\nexport class AIChatMessage extends BaseChatMessage {\n    _getType() {\n        return \"ai\";\n    }\n}\nexport class SystemChatMessage extends BaseChatMessage {\n    _getType() {\n        return \"system\";\n    }\n}\nexport class ChatMessage extends BaseChatMessage {\n    constructor(text, role) {\n        super(text);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n}\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue {\n}\n/**\n * Base Index class. All indexes should extend this class.\n */\nexport class BaseRetriever {\n}\nexport class BaseChatMessageHistory {\n}\nexport class BaseListChatMessageHistory {\n    addUserMessage(message) {\n        return this.addMessage(new HumanChatMessage(message));\n    }\n    addAIChatMessage(message) {\n        return this.addMessage(new AIChatMessage(message));\n    }\n}\nexport class BaseCache {\n}\nexport class BaseFileStore {\n}\nexport class BaseEntityStore {\n}\n"],
  "mappings": ";AAAO,IAAM,UAAU;AAChB,IAAM,kBAAN,MAAsB;AAAA,EACzB,YAAY,MAAM;AAEd,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AAED,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,SAAS;AACL,WAAO;AAAA,MACH,MAAM,KAAK,SAAS;AAAA,MACpB,MAAM;AAAA,QACF,SAAS,KAAK;AAAA,QACd,MAAM,UAAU,OAAO,KAAK,OAAO;AAAA,MACvC;AAAA,IACJ;AAAA,EACJ;AACJ;AACO,IAAM,mBAAN,cAA+B,gBAAgB;AAAA,EAClD,WAAW;AACP,WAAO;AAAA,EACX;AACJ;AACO,IAAM,gBAAN,cAA4B,gBAAgB;AAAA,EAC/C,WAAW;AACP,WAAO;AAAA,EACX;AACJ;AACO,IAAM,oBAAN,cAAgC,gBAAgB;AAAA,EACnD,WAAW;AACP,WAAO;AAAA,EACX;AACJ;AACO,IAAM,cAAN,cAA0B,gBAAgB;AAAA,EAC7C,YAAY,MAAM,MAAM;AACpB,UAAM,IAAI;AACV,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,WAAW;AACP,WAAO;AAAA,EACX;AACJ;AAIO,IAAM,kBAAN,MAAsB;AAC7B;AAQO,IAAM,6BAAN,MAAiC;AAAA,EACpC,eAAe,SAAS;AACpB,WAAO,KAAK,WAAW,IAAI,iBAAiB,OAAO,CAAC;AAAA,EACxD;AAAA,EACA,iBAAiB,SAAS;AACtB,WAAO,KAAK,WAAW,IAAI,cAAc,OAAO,CAAC;AAAA,EACrD;AACJ;",
  "names": []
}
